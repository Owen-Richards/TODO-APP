"""
Django settings for assignmentorganizer project.
Generated by 'django-admin startproject' using Django 3.2.7.
For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
#import django_heroku
import os
import cloudinary
import cloudinary.uploader
import cloudinary.api
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9iy!v4kl*e+5(p$y&!&s3(3&vcla*w46b+u!ekll-g@mq^_#gl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

SECURE_SSL_REDIRECT = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'oauth_app', #do everything here
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'assignmentorganizer',
    #'calendarApp',
    #'eventCalendar',
    'uploads',
    'cloudinary',
    'storages',
    's3p3',
    'classes'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Simplified static file serving.
    # https://warehouse.python.org/project/whitenoise/
    'whitenoise.middleware.WhiteNoiseMiddleware', 
]

ROOT_URLCONF = 'assignmentorganizer.urls'

# Google authentication
# https://www.section.io/engineering-education/django-google-oauth/
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'assignmentorganizer.wsgi.application'


# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.sqlite3',
# #         'NAME': BASE_DIR / 'db.sqlite3',
# #     }
# # }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'd87eg6rsc9v65o',
#         'USER': 'jfecjxftmmofhl',
#         'PASSWORD': '7ffd297171edca7225e111f6b9d488e94fa2c66323c1c9d386e8688518eb4749',
#         'HOST': 'ec2-52-23-87-65.compute-1.amazonaws.com',
#         'PORT':  '5432'
#     }
# }

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
if 'test' in sys.argv or 'Run Tests' in sys.argv:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'd87eg6rsc9v65o',
            'USER': 'jfecjxftmmofhl',
            'PASSWORD': '7ffd297171edca7225e111f6b9d488e94fa2c66323c1c9d386e8688518eb4749',
            'HOST': 'ec2-52-23-87-65.compute-1.amazonaws.com',
            'PORT':  '5432',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Google authentication
# https://www.section.io/engineering-education/django-google-oauth/
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

SITE_ID = 5

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

AUTH_PROFILE_MODULE = 'accounts.UserProfile'

# https://cs3240.cs.virginia.edu/project-resources
try:
    if 'HEROKU' in os.environ:
        import django_heroku
        django_heroku.settings(locals())
except ImportError:
    found = False

STATIC_URL='/static/'
MEDIA_URL='/pdfs/'

STATIC_DIRS= [
    os.path.join(str(BASE_DIR), 'static')
]
MEDIA_ROOT=os.path.join(str(BASE_DIR), 'static/pdf')
STATIC_ROOT=os.path.join(str(BASE_DIR), 'staticfiles')

AWS_QUERYSTRING=False
DEFAULT_FILE_STORAGE='storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID='AKIAXQONTORSFXXOLBGU'
AWS_SECRET_ACCESS_KEY='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'
AWS_STORAGE_BUCKET_NAME='assignmentorganizer'

THUMBNAIL_FORCE_OVERWRITE = True
# https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html
